{"version":3,"file":"music-9f206da2.js","sources":["../../../../pages/music.vue"],"sourcesContent":["<script setup>\nconst { playChord, parseChord } = await import(\"@only-web/chords\");\n\nconst {\n  public: { music, MILLISECONDS_PER_SECOND, SECONDS_PER_MINUTE }\n} = useAppConfig();\n\nlet highlightPointer = 0;\nlet remainingChords = [];\nlet sequencePlayerID = null;\n\nconst isPlaying = ref(false);\nconst isPreparingToPlay = ref(false);\nconst chordInstructions = ref(music.playerChordInstructionsDefault);\nconst chordInstructionsInput = ref(null);\nconst displayedNotes = ref(music.playerNoteReadoutDefault);\nconst bpm = ref(music.playerBeatsPerMinuteDefault);\nconst bpmMS = computed(\n  () => (MILLISECONDS_PER_SECOND * SECONDS_PER_MINUTE) / bpm.value\n);\n\nfunction startSequence() {\n  isPreparingToPlay.value = true;\n  remainingChords = chordInstructions.value.split(/\\s+/).reverse();\n  sequencePlayerID = setInterval(playNextChord, bpmMS.value);\n}\n\nfunction highlightChord(chordString) {\n  const currentChordIndex = chordInstructions.value.indexOf(\n    chordString,\n    highlightPointer\n  );\n\n  highlightPointer = currentChordIndex + chordString.length;\n\n  chordInstructionsInput.value.setSelectionRange(\n    currentChordIndex,\n    highlightPointer\n  );\n\n  chordInstructionsInput.value.focus();\n}\n\nasync function playNextChord() {\n  [isPlaying.value, isPreparingToPlay.value] = [true, false];\n\n  const currentChordString = remainingChords.pop();\n\n  if (!currentChordString) return;\n  if (!remainingChords.length) setTimeout(stopSequence, bpmMS.value);\n\n  highlightChord(currentChordString);\n\n  displayedNotes.value = parseChord(currentChordString);\n\n  await playChord(\n    displayedNotes.value,\n    (bpmMS.value / MILLISECONDS_PER_SECOND).toFixed(1)\n  );\n}\n\nfunction stopSequence() {\n  clearInterval(sequencePlayerID);\n\n  [isPlaying.value, highlightPointer, displayedNotes.value, remainingChords] = [\n    false,\n    0,\n    music.playerNoteReadoutDefault,\n    []\n  ];\n\n  chordInstructionsInput.value.blur();\n}\n</script>\n\n<template>\n  <div class=\"Music\">\n    <div class=\"MusicNotes__container\">\n      <ol class=\"MusicNotes\">\n        <li\n          class=\"MusicNote\"\n          v-for=\"(note, index) in displayedNotes\"\n          :key=\"note + index\"\n        >\n          {{ note }}\n        </li>\n      </ol>\n    </div>\n\n    <fieldset class=\"MusicInputs\">\n      <label>\n        Chords\n        <textarea\n          type=\"textarea\"\n          v-model=\"chordInstructions\"\n          ref=\"chordInstructionsInput\"\n        ></textarea>\n      </label>\n\n      <label>\n        Beats per minute (BPM)\n        <input\n          class=\"MusicInput\"\n          type=\"number\"\n          v-model=\"bpm\"\n          min=\"24\"\n          max=\"300\"\n        />\n      </label>\n    </fieldset>\n\n    <button\n      v-if=\"isPlaying\"\n      @click.stop.prevent=\"() => stopSequence()\"\n      :disabled=\"isPreparingToPlay\"\n    >\n      üõë cancel\n    </button>\n\n    <button v-else @click.stop.prevent=\"() => startSequence()\">‚ñ∂Ô∏è play</button>\n  </div>\n</template>\n\n<style scoped>\n.Music {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  overflow: hidden;\n  width: 100%;\n}\n\n.MusicInputs {\n  max-width: var(--device-width-tablet);\n  padding: var(--size-small);\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.MusicNotes__container {\n  background-color: var(--color-highlight);\n  height: var(--size-huge);\n  margin-bottom: var(--size-large);\n  padding: var(--size-small);\n  text-align: center;\n  width: 100%;\n}\n\n.MusicNotes {\n  box-sizing: border-box;\n  display: inline-flex;\n  font-family: var(--font-default);\n  justify-content: space-around;\n  list-style-type: none;\n  max-width: var(--device-width-tablet);\n  position: relative;\n  top: var(--size-default);\n  width: 100%;\n}\n\n.MusicNote {\n  color: var(--color-default);\n  font-size: var(--size-extra-large);\n}\n</style>\n"],"names":["music"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAEA,UAAA;AAAA,MACA,QAAA,EAAA,OAAAA,QAAA,yBAAA,mBAAA;AAAA,IACA,IAAA,aAAA;AAMA,UAAA,YAAA,IAAA,KAAA;AACA,UAAA,oBAAA,IAAA,KAAA;AACA,UAAA,oBAAA,IAAAA,OAAA,8BAAA;AACA,QAAA,IAAA;AACA,UAAA,iBAAA,IAAAA,OAAA,wBAAA;AACA,UAAA,MAAA,IAAAA,OAAA,2BAAA;AACA;AAAA,MACA,MAAA,0BAAA,qBAAA,IAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;"}